generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

model User {
  id         Int         @id @default(autoincrement())
  name       String
  password   String
  email      String @unique
  role       ROLE

  characters Character[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Class {
  id           Int         @id @default(autoincrement())
  name         String
  description  String?

  vitality     Int
  strength     Int
  dexterity    Int
  intelligence Int
  faith        Int
  luck         Int

  characters   Character[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Character {
  id           Int        @id @default(autoincrement())
  name         String
  level        Int        @default(1)
  vitality     Int
  strength     Int
  dexterity    Int
  intelligence Int
  faith        Int
  luck         Int

  userId       Int
  user         User       @relation(fields: [userId], references: [id])

  classId      Int
  classType    Class      @relation(fields: [classId], references: [id])

  equipment    Equipment? @relation(fields: [equipmentId], references: [id]) 
  equipmentId  Int?       @unique 

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Equipment {
  id                Int        @id @default(autoincrement())

  character         Character? 
  

  // Слоты для правой руки
  rightHandPrimary  String? 
  rightHandSecondary String?
  rightHandTertiary String? 

  // Слоты для левой руки
  leftHandPrimary   String? 
  leftHandSecondary String? 
  leftHandTertiary  String? 

  // Аммуниция для луков и арбалетов
  arrows            Arrow[]
  bolts             Bolt[]

  // Снаряжение
  helmet            String? 
  chestplate        String? 
  leggings          String? 
  boots             String? 

  // Кольца
  ringSlot1         String?
  ringSlot2         String?
  ringSlot3         String?
  ringSlot4         String?

  // Быстрые слоты
  quickSlot1        String? 
  quickSlot2        String? 
  quickSlot3        String? 
  quickSlot4        String? 
  quickSlot5        String? 
  quickSlot6        String? 
  quickSlot7        String? 
  quickSlot8        String? 
  quickSlot9        String? 
  quickSlot10       String? 

  // Ковенант
  CovenantId        Int?  
  Covenant          Covenant? @relation(fields: [CovenantId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Arrow {
  id                Int     @id @default(autoincrement())
  type              String
  quantity          Int

  equipmentId       Int
  equipment         Equipment @relation(fields: [equipmentId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Bolt {
  id                Int     @id @default(autoincrement())
  type              String
  quantity          Int

  equipmentId       Int
  equipment         Equipment @relation(fields: [equipmentId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Covenant {
  id                Int     @id @default(autoincrement())
  name              String
  imageUrl          String
  description       String
  members           Equipment[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Location {
  id        Int     @id @default(autoincrement())
  name      String
  boss      Boss?   @relation("BossToLocation")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Boss {
  id          Int      @id @default(autoincrement())
  name        String
  healthPoints Int
  energy      Int

  locationId  Int      @unique 
  location    Location @relation("BossToLocation", fields: [locationId], references: [id])

  loot        Loot[]   

  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Loot {
  id                Int     @id @default(autoincrement())
  name              String
  dropChance        Float 
  
  bossId            Int
  boss              Boss @relation(fields: [bossId], references: [id])

  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
}




enum ROLE {
  USER
  ADMIN
}